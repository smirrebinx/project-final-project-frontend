import { createSlice } from '@reduxjs/toolkit';

// Create a slice of the Redux store for user
const user = createSlice({
  name: 'user', // Name of the slice
  initialState: {
    userId: null, // User ID
    accessToken: null, // Access token for authentication
    error: null // Error message
  },
  reducers: {
    setUserId: (store, action) => {
      store.userId = action.payload; // Update the userId with the payload
    },
    setEmail: (store, action) => {
      store.email = action.payload; // Update the email with the payload
    },
    setAccessToken: (store, action) => {
      store.accessToken = action.payload; // Update the accessToken with the payload
    },
    setError: (store, action) => {
      store.error = action.payload; // Update the error with the payload
    },
    loginSuccess: (store, action) => {
      const { id, accessToken } = action.payload;
      store.userId = id; // Update the userId with the payload's id
      store.accessToken = accessToken; // Update the accessToken with the payload's accessToken
      store.error = null; // Clear the error message
    },
    logout: (store) => {
      store.userId = null; // Clear the userId
      store.email = null; // Clear the email
      store.accessToken = null; // Clear the accessToken
      localStorage.removeItem('user'); // Remove user data from local storage
    }
  }
});

// Extract the action creators generated by the user slice
export const { setUserId, setAccessToken, setError, loginSuccess, logout } = user.actions;

export default user; // Export the user slice as the default export
